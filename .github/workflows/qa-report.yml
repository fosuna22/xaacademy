name: QA Report (manual - JSON simple)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch a ejecutar'
        required: true
        default: 'main'
      tag:
        description: 'Tag/grep para las pruebas (opcional, ej: @login)'
        required: false
        default: ''

jobs:
  cypress-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          npm ci
          # Reporte JSON estable (sin mochawesome)
          npm i -D cypress-multi-reporters mocha-json-reporter

      - name: Create reporter config
        run: |
          mkdir -p cypress/results
          cat > reporter-config.json << 'JSON'
          {
            "reporterEnabled": "mocha-json-reporter",
            "mochaJsonReporterReporterOptions": {
              "output": "cypress/results/results.json",
              "includePending": true,
              "usePendingAsNotPassed": true
            }
          }
          JSON
          cat reporter-config.json

      - name: Run Cypress (json reporter to file)
        env:
          TEST_TAG: ${{ github.event.inputs.tag }}
        run: |
          EXTRA_ARGS=""
          if [ -n "$TEST_TAG" ]; then
            # Ajustá según tu estrategia (cypress-grep, spec, etc.)
            # EXTRA_ARGS="--env grepTags=$TEST_TAG"
            # EXTRA_ARGS="--spec cypress/e2e/${TEST_TAG}.cy.js"
            echo "Ejecutando con filtro: $TEST_TAG (ajusta EXTRA_ARGS si corresponde)"
          fi

          npx cypress run \
            --reporter cypress-multi-reporters \
            --reporter-options "configFile=reporter-config.json" \
            $EXTRA_ARGS || true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Verificar JSON generado
        run: |
          test -s cypress/results/results.json || (echo "No se generó cypress/results/results.json" && exit 1)
          # Mostrar stats útiles
          jq '.stats // {}' cypress/results/results.json || true

      - name: POST to n8n (JSON simple con detalles de fallos)
        env:
          WEBHOOK_URL: "https://francoosunaafip.app.n8n.cloud/webhook/7851647c-e729-498e-a11a-190e03f20d81"
        run: |
          set -euo pipefail

          RESULTS_JSON="cypress/results/results.json"

          # Totales desde stats (del json reporter), con fallback
          PASSED=$(jq '.stats.passes // (.passes | length) // 0' "$RESULTS_JSON")
          FAILED=$(jq '.stats.failures // (.failures | length) // 0' "$RESULTS_JSON")
          DURATION=$(jq '.stats.duration // 0' "$RESULTS_JSON")

          # Detalle de fallos
          # - mocha-json-reporter produce .failures[] con campos .fullTitle, .title, .file, .err{message}
          # - suite = fullTitle sin el título del test al final
          FAILS=$(jq -c '[
            .failures[]?
            | {
                suite: (.fullTitle // "" | sub(" " + (.title // "") + "$"; "")),
                test:  (.title // ""),
                file:  (.file // .fullFile // ""),
                error: (.err.message // .err // "")
              }
          ]' "$RESULTS_JSON")

          echo "Resumen → passed=$PASSED failed=$FAILED durationMs=$DURATION"
          echo "Fallos:"
          echo "$FAILS" | jq -r '.[] | "- " + (.suite // "") + " :: " + (.test // "")' || true

          # Payload robusto
          PAYLOAD=$(jq -n \
            --argjson passed   "$PASSED" \
            --argjson failed   "$FAILED" \
            --argjson duration "$DURATION" \
            --argjson failures "$FAILS" \
            '{passed:$passed, failed:$failed, durationMs:$duration, failures:$failures}')

          echo "POST → $WEBHOOK_URL"
          echo "$PAYLOAD" | jq . || true

          curl -sS -f -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            -w "\nHTTP_CODE=%{http_code}\n"

      - name: Upload artifact (opcional)
        uses: actions/upload-artifact@v4
        with:
          name: cypress-json-results
          path: cypress/results/results.json
