name: QA Report (manual - JSON simple, robusto)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch a ejecutar'
        required: true
        default: 'main'
      tag:
        description: 'Tag/grep para las pruebas (opcional, ej: @login)'
        required: false
        default: ''

jobs:
  cypress-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          npm ci

      - name: Run Cypress (reporter json → stdout)
        env:
          TEST_TAG: ${{ github.event.inputs.tag }}
        run: |
          mkdir -p cypress/results

          EXTRA_ARGS=""
          if [ -n "$TEST_TAG" ]; then
            # Ajustá según tu estrategia (cypress-grep, spec, etc.)
            # EXTRA_ARGS="--env grepTags=$TEST_TAG"
            # EXTRA_ARGS="--spec cypress/e2e/${TEST_TAG}.cy.js"
            echo "Ejecutando con filtro: $TEST_TAG (ajusta EXTRA_ARGS si corresponde)"
          fi

          # Guardamos TODO el stdout (mezcla logs + JSON) en un archivo
          npx cypress run --reporter json $EXTRA_ARGS | tee cypress/results/stdout.txt || true

      - name: Extraer JSON limpio del stdout
        run: |
          node -e "const fs=require('fs');const p='cypress/results/stdout.txt';const s=fs.readFileSync(p,'utf8');let start=-1,depth=0,lastStart=-1,lastEnd=-1;for(let i=0;i<s.length;i++){const c=s[i];if(c=='{'){if(depth===0)start=i;depth++}else if(c=='}'){depth--;if(depth===0&&start!==-1){lastStart=start;lastEnd=i+1}}}if(lastStart>=0){fs.writeFileSync('cypress/results/results.json',s.slice(lastStart,lastEnd))}else{process.exitCode=2;console.error('No se encontró JSON en stdout')}"
          test -s cypress/results/results.json || (echo 'No se generó cypress/results/results.json' && exit 1)
          # Mostrar stats si existen
          sudo apt-get update && sudo apt-get install -y jq
          jq '.stats // {}' cypress/results/results.json || true

      - name: POST to n8n (JSON simple con detalles de fallos)
        env:
          WEBHOOK_URL: "https://francoosunaafip.app.n8n.cloud/webhook/7851647c-e729-498e-a11a-190e03f20d81"
        run: |
          set -euo pipefail
          RESULTS_JSON="cypress/results/results.json"

          # Totales (robustos)
          PASSED=$(jq -r '[.tests[]? | select(.state=="passed" or .pass==true)] | length' "$RESULTS_JSON")
          FAILED=$(jq -r '[.tests[]? | select(.state=="failed" or .fail==true)] | length' "$RESULTS_JSON")
          DURATION=$(jq -r '.stats.duration // ([.tests[]? | .duration] | add // 0)' "$RESULTS_JSON")

          # Detalle de fallos: suite + caso + archivo + error
          FAILS=$(jq -c '[.tests[]?
            | select(.state=="failed" or .fail==true)
            | {
                suite: ((.title // []) | (.[0] // "")),
                test:  ((.title // []) | (.[length-1] // "")),
                file:  (.file // .fullFile // ""),
                error: (.err.message // .err // "")
              } ]' "$RESULTS_JSON")

          echo "Resumen → passed=$PASSED failed=$FAILED durationMs=$DURATION"
          echo "$FAILS" | jq -r '.[] | "- " + (.suite // "") + " :: " + (.test // "")' || true

          # Armar payload
          PAYLOAD=$(jq -n \
            --argjson passed   "$PASSED" \
            --argjson failed   "$FAILED" \
            --argjson duration "$DURATION" \
            --argjson failures "$FAILS" \
            '{passed:$passed, failed:$failed, durationMs:$duration, failures:$failures}')

          echo "POST → $WEBHOOK_URL"
          echo "$PAYLOAD" | jq .

          curl -sS -f -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            -w "\nHTTP_CODE=%{http_code}\n"

      - name: Upload artifacts (opcional)
        uses: actions/upload-artifact@v4
        with:
          name: cypress-json-results
          path: |
            cypress/results/stdout.txt
            cypress/results/results.json
