name: QA Report (manual - JSON simple y robusto)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch a ejecutar'
        required: true
        default: 'main'
      tag:
        description: 'Tag/grep para las pruebas (opcional, ej: @login)'
        required: false
        default: ''

jobs:
  cypress-and-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: |
          npm ci
          npm i -D mocha-json-reporter
          sudo apt-get update && sudo apt-get install -y jq

      - name: Run Cypress con reporter JSON a archivo
        env:
          TEST_TAG: ${{ github.event.inputs.tag }}
          CI: "1"
        run: |
          set -euxo pipefail
          mkdir -p cypress/results

          EXTRA_ARGS=""
          if [ -n "$TEST_TAG" ]; then
            echo "Ejecutando con filtro: $TEST_TAG"
            # Si usas cypress-grep, descomenta:
            # EXTRA_ARGS="--env grepTags=$TEST_TAG"
            # O si filtras por spec:
            # EXTRA_ARGS="--spec cypress/e2e/${TEST_TAG}.cy.js"
          fi

          # Ejecuta Cypress usando directamente el reporter de Mocha (sin multi-reporters)
          npx cypress run \
            --reporter mocha-json-reporter \
            --reporter-options "output=cypress/results/results.json,includePending=true" \
            $EXTRA_ARGS || true

          # PLAN B: si por algún motivo el reporter escribió con otro nombre/ruta, lo detectamos y movemos
          if [ ! -s cypress/results/results.json ]; then
            echo "results.json no encontrado; intento localizar otro JSON de reporter…"
            FOUND=$( (ls -1 **/*.json 2>/dev/null || true) | grep -E '(results|report|mocha).*\.json$' || true )
            if [ -n "$FOUND" ]; then
              echo "Encontrado: $FOUND → moviendo a cypress/results/results.json"
              mv "$FOUND" cypress/results/results.json
            fi
          fi

          # Falla si aún no existe (para que el error sea claro)
          test -s cypress/results/results.json || (echo "No se generó cypress/results/results.json" && exit 1)

      - name: Mostrar stats rápidas
        run: |
          echo "Stats:"
          jq '.stats // {}' cypress/results/results.json || true

      - name: POST to n8n (JSON simple con detalles de fallos)
        env:
          WEBHOOK_URL: "https://francoosunaafip.app.n8n.cloud/webhook/7851647c-e729-498e-a11a-190e03f20d81"
        run: |
          set -euo pipefail
          RESULTS_JSON="cypress/results/results.json"

          # Estructura típica de mocha-json-reporter:
          # { stats:{passes, failures, duration, ...}, passes:[...], failures:[...], pending:[...], tests:[...] }
          PASSED=$(jq -r '.stats.passes // (.passes|length // 0)' "$RESULTS_JSON")
          FAILED=$(jq -r '.stats.failures // (.failures|length // 0)' "$RESULTS_JSON")
          DURATION=$(jq -r '.stats.duration // 0' "$RESULTS_JSON")

          FAILS=$(jq -c '[.failures[]?
            | {
                suite: ((.fullTitle // .title // "") | (type=="string" ? . : (.[0] // ""))),
                test:  ((.title // .fullTitle // "")   | (type=="string" ? . : (.[length-1] // ""))),
                file:  (.file // .fullFile // ""),
                error: (.err.message // .err // .error // "")
              } ]' "$RESULTS_JSON")

          echo "Resumen → passed=$PASSED failed=$FAILED durationMs=$DURATION"
          echo "$FAILS" | jq -r '.[] | "- " + (.suite // "") + " :: " + (.test // "")' || true

          PAYLOAD=$(jq -n \
            --argjson passed   "$PASSED" \
            --argjson failed   "$FAILED" \
            --argjson duration "$DURATION" \
            --argjson failures "$FAILS" \
            '{passed:$passed, failed:$failed, durationMs:$duration, failures:$failures}')

          echo "POST → $WEBHOOK_URL"
          echo "$PAYLOAD" | jq .

          curl -sS -f -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            -w "\nHTTP_CODE=%{http_code}\n"

      - name: Upload artifacts (JSON)
        uses: actions/upload-artifact@v4
        with:
          name: cypress-json-results
          path: |
            cypress/results/results.json
